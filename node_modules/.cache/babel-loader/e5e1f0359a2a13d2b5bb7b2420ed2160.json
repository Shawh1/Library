{"remainingRequest":"C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\node_modules\\babel-loader\\lib\\index.js!C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\node_modules\\vuetify\\lib\\services\\lang\\index.js","dependencies":[{"path":"C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\node_modules\\vuetify\\lib\\services\\lang\\index.js","mtime":499162500000},{"path":"C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\babel.config.js","mtime":1662469280639},{"path":"C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Devlopment\\Qmatic\\qmatic-fe-assignment\\vue-class-component\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;AACA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,WAAW,GAAG,WAApB;AACA,IAAMC,QAAQ,GAAGC,MAAM,CAAC,eAAD,CAAvB;;AAEA,SAASC,cAAT,CACEC,MADF,EAEEC,GAFF,EAI8B;EAAA,IAD5BC,YAC4B,uEADb,KACa;EAAA,IAA5BC,aAA4B;EAE5B,IAAMC,QAAQ,GAAGH,GAAG,CAACI,OAAJ,CAAYT,WAAZ,EAAyB,EAAzB,CAAjB;EACA,IAAIU,WAAW,GAAG,mCAAqBN,MAArB,EAA6BI,QAA7B,EAAuCP,QAAvC,CAAlB;;EAEA,IAAIS,WAAW,KAAKT,QAApB,EAA8B;IAC5B,IAAIK,YAAJ,EAAkB;MAChB,uDAAiCE,QAAjC;MACAE,WAAW,GAAGL,GAAd;IAFF,OAGO;MACL,sDAAgCG,QAAhC;MACAE,WAAW,GAAGP,cAAc,CAACI,aAAD,EAAgBF,GAAhB,EAAqB,IAArB,EAA2BE,aAA3B,CAA5B;IACD;EACF;;EAED,OAAOG,WAAP;AACD;;IAEYC,I,wBAAAA,I;;;;;EAWX,cAAaC,MAAb,EAAkC;IAAA;;IAAA;;IAChC;IAPK,sBAAgB,IAAhB;IASL,4BAIIA,MAAM,CAACD,IAAI,CAACE,QAAN,CAJV;IAAA,IACEC,OADF,yBACEA,OADF;IAAA,IAEEC,OAFF,yBAEEA,OAFF;IAAA,IAGEC,CAHF,yBAGEA,CAHF;IAMA,MAAKF,OAAL,GAAeA,OAAf;IACA,MAAKC,OAAL,GAAeA,OAAf;IACA,MAAKE,UAAL,GAAkBD,CAAC,IAAI,MAAKE,iBAA5B;IAXgC;EAYjC;;;;WAEM,uBAAeb,GAAf,EAA0B;MAC/B,IAAMK,WAAW,GAAG,KAAKK,OAAL,CAAa,KAAKD,OAAlB,CAApB;MACA,IAAMP,aAAa,GAAG,KAAKQ,OAAL,CAAa,KAAKR,aAAlB,CAAtB;MAEA,OAAOJ,cAAc,CAACO,WAAD,EAAcL,GAAd,EAAmB,KAAnB,EAA0BE,aAA1B,CAArB;IACD;;;WAEM,WAAGF,GAAH,EAAgC;MAAA,kCAAbc,MAAa;QAAbA,MAAa;MAAA;;MACrC,IAAI,CAACd,GAAG,CAACe,UAAJ,CAAepB,WAAf,CAAL,EAAkC,OAAO,KAAKS,OAAL,CAAaJ,GAAb,EAAkBc,MAAlB,CAAP;MAElC,OAAO,KAAKF,UAAL,cAAgBZ,GAAhB,SAAwBc,MAAxB,EAAP;IACD;;;WAEO,2BAAmBd,GAAnB,EAAgD;MAAA,mCAAbc,MAAa;QAAbA,MAAa;MAAA;;MACtD,OAAO,KAAKV,OAAL,CAAa,KAAKY,aAAL,CAAmBhB,GAAnB,CAAb,EAAsCc,MAAtC,CAAP;IACD;;;WAEO,iBAASG,GAAT,EAAsBH,MAAtB,EAAmC;MACzC,OAAOG,GAAG,CAACb,OAAJ,CAAY,YAAZ,EAA0B,UAACc,KAAD,EAAgBC,KAAhB,EAAiC;QAChE;QACA,OAAOC,MAAM,CAACN,MAAM,CAAC,CAACK,KAAF,CAAP,CAAb;MAFK,EAAP;IAID;;;;EA/CuBE,gB;;AACjBf,gBAAmB,MAAnB","names":["LANG_PREFIX","fallback","Symbol","getTranslation","locale","key","usingDefault","defaultLocale","shortKey","replace","translation","Lang","preset","property","current","locales","t","translator","defaultTranslator","params","startsWith","currentLocale","str","match","index","String","Service"],"sourceRoot":"","sources":["../../../src/services/lang/index.ts"],"sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingDefault = false,\n  defaultLocale: VuetifyLocale\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(defaultLocale, key, true, defaultLocale)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property: 'lang' = 'lang'\n\n  public current: ILang['current']\n\n  public defaultLocale = 'en'\n\n  public locales: ILang['locales']\n\n  private translator: ILang['t']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      current,\n      locales,\n      t,\n    } = preset[Lang.property]\n\n    this.current = current\n    this.locales = locales\n    this.translator = t || this.defaultTranslator\n  }\n\n  public currentLocale (key: string) {\n    const translation = this.locales[this.current]\n    const defaultLocale = this.locales[this.defaultLocale]\n\n    return getTranslation(translation, key, false, defaultLocale)\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    return this.translator(key, ...params)\n  }\n\n  private defaultTranslator (key: string, ...params: any[]) {\n    return this.replace(this.currentLocale(key), params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n"]}]}