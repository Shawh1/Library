{"remainingRequest":"C:\\Test\\Library\\node_modules\\babel-loader\\lib\\index.js!C:\\Test\\Library\\node_modules\\vuetify\\lib\\util\\colorUtils.js","dependencies":[{"path":"C:\\Test\\Library\\node_modules\\vuetify\\lib\\util\\colorUtils.js","mtime":1663166508845},{"path":"C:\\Test\\Library\\babel.config.js","mtime":1663166470352},{"path":"C:\\Test\\Library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663166481294},{"path":"C:\\Test\\Library\\node_modules\\babel-loader\\lib\\index.js","mtime":1663166479765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmlzQ3NzQ29sb3IgPSBpc0Nzc0NvbG9yOwpleHBvcnRzLmNvbG9yVG9JbnQgPSBjb2xvclRvSW50OwpleHBvcnRzLmNsYXNzVG9IZXggPSBjbGFzc1RvSGV4OwpleHBvcnRzLmludFRvSGV4ID0gaW50VG9IZXg7CmV4cG9ydHMuY29sb3JUb0hleCA9IGNvbG9yVG9IZXg7CmV4cG9ydHMuSFNWQXRvUkdCQSA9IEhTVkF0b1JHQkE7CmV4cG9ydHMuUkdCQXRvSFNWQSA9IFJHQkF0b0hTVkE7CmV4cG9ydHMuSFNWQXRvSFNMQSA9IEhTVkF0b0hTTEE7CmV4cG9ydHMuSFNMQXRvSFNWQSA9IEhTTEF0b0hTVkE7CmV4cG9ydHMuUkdCQXRvQ1NTID0gUkdCQXRvQ1NTOwpleHBvcnRzLlJHQnRvQ1NTID0gUkdCdG9DU1M7CmV4cG9ydHMuUkdCQXRvSGV4ID0gUkdCQXRvSGV4OwpleHBvcnRzLkhleFRvUkdCQSA9IEhleFRvUkdCQTsKZXhwb3J0cy5IZXhUb0hTVkEgPSBIZXhUb0hTVkE7CmV4cG9ydHMuSFNWQXRvSGV4ID0gSFNWQXRvSGV4OwpleHBvcnRzLnBhcnNlSGV4ID0gcGFyc2VIZXg7CmV4cG9ydHMucGFyc2VHcmFkaWVudCA9IHBhcnNlR3JhZGllbnQ7CmV4cG9ydHMuUkdCdG9JbnQgPSBSR0J0b0ludDsKZXhwb3J0cy5jb250cmFzdFJhdGlvID0gY29udHJhc3RSYXRpbzsKCnZhciBfY29uc29sZSA9IHJlcXVpcmUoIi4vY29uc29sZSIpOwoKdmFyIF9oZWxwZXJzID0gcmVxdWlyZSgiLi9oZWxwZXJzIik7Cgp2YXIgX3RyYW5zZm9ybVNSR0IgPSByZXF1aXJlKCIuL2NvbG9yL3RyYW5zZm9ybVNSR0IiKTsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFyclsiQEBpdGVyYXRvciJdOyBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9zLCBfZTsgdHJ5IHsgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfQoKZnVuY3Rpb24gaXNDc3NDb2xvcihjb2xvcikgewogIHJldHVybiAhIWNvbG9yICYmICEhY29sb3IubWF0Y2goL14oI3x2YXJcKC0tfChyZ2J8aHNsKWE/XCgpLyk7Cn0KCmZ1bmN0aW9uIGNvbG9yVG9JbnQoY29sb3IpIHsKICB2YXIgcmdiOwoKICBpZiAodHlwZW9mIGNvbG9yID09PSAnbnVtYmVyJykgewogICAgcmdiID0gY29sb3I7CiAgfSBlbHNlIGlmICh0eXBlb2YgY29sb3IgPT09ICdzdHJpbmcnKSB7CiAgICB2YXIgYyA9IGNvbG9yWzBdID09PSAnIycgPyBjb2xvci5zdWJzdHJpbmcoMSkgOiBjb2xvcjsKCiAgICBpZiAoYy5sZW5ndGggPT09IDMpIHsKICAgICAgYyA9IGMuc3BsaXQoJycpLm1hcChmdW5jdGlvbiAoX2NoYXIpIHsKICAgICAgICByZXR1cm4gX2NoYXIgKyBfY2hhcjsKICAgICAgfSkuam9pbignJyk7CiAgICB9CgogICAgaWYgKGMubGVuZ3RoICE9PSA2KSB7CiAgICAgICgwLCBfY29uc29sZS5jb25zb2xlV2FybikoIiciLmNvbmNhdChjb2xvciwgIicgaXMgbm90IGEgdmFsaWQgcmdiIGNvbG9yIikpOwogICAgfQoKICAgIHJnYiA9IHBhcnNlSW50KGMsIDE2KTsKICB9IGVsc2UgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ29sb3JzIGNhbiBvbmx5IGJlIG51bWJlcnMgb3Igc3RyaW5ncywgcmVjaWV2ZWQgIi5jb25jYXQoY29sb3IgPT0gbnVsbCA/IGNvbG9yIDogY29sb3IuY29uc3RydWN0b3IubmFtZSwgIiBpbnN0ZWFkIikpOwogIH0KCiAgaWYgKHJnYiA8IDApIHsKICAgICgwLCBfY29uc29sZS5jb25zb2xlV2FybikoIkNvbG9ycyBjYW5ub3QgYmUgbmVnYXRpdmU6ICciLmNvbmNhdChjb2xvciwgIiciKSk7CiAgICByZ2IgPSAwOwogIH0gZWxzZSBpZiAocmdiID4gMHhmZmZmZmYgfHwgaXNOYU4ocmdiKSkgewogICAgKDAsIF9jb25zb2xlLmNvbnNvbGVXYXJuKSgiJyIuY29uY2F0KGNvbG9yLCAiJyBpcyBub3QgYSB2YWxpZCByZ2IgY29sb3IiKSk7CiAgICByZ2IgPSAweGZmZmZmZjsKICB9CgogIHJldHVybiByZ2I7Cn0KCmZ1bmN0aW9uIGNsYXNzVG9IZXgoY29sb3IsIGNvbG9ycywgY3VycmVudFRoZW1lKSB7CiAgdmFyIF9jb2xvciR0b1N0cmluZyR0cmltJCA9IGNvbG9yLnRvU3RyaW5nKCkudHJpbSgpLnJlcGxhY2UoJy0nLCAnJykuc3BsaXQoJyAnLCAyKSwKICAgICAgX2NvbG9yJHRvU3RyaW5nJHRyaW0kMiA9IF9zbGljZWRUb0FycmF5KF9jb2xvciR0b1N0cmluZyR0cmltJCwgMiksCiAgICAgIGNvbG9yTmFtZSA9IF9jb2xvciR0b1N0cmluZyR0cmltJDJbMF0sCiAgICAgIGNvbG9yTW9kaWZpZXIgPSBfY29sb3IkdG9TdHJpbmckdHJpbSQyWzFdOwoKICB2YXIgaGV4Q29sb3IgPSAnJzsKCiAgaWYgKGNvbG9yTmFtZSAmJiBjb2xvck5hbWUgaW4gY29sb3JzKSB7CiAgICBpZiAoY29sb3JNb2RpZmllciAmJiBjb2xvck1vZGlmaWVyIGluIGNvbG9yc1tjb2xvck5hbWVdKSB7CiAgICAgIGhleENvbG9yID0gY29sb3JzW2NvbG9yTmFtZV1bY29sb3JNb2RpZmllcl07CiAgICB9IGVsc2UgaWYgKCdiYXNlJyBpbiBjb2xvcnNbY29sb3JOYW1lXSkgewogICAgICBoZXhDb2xvciA9IGNvbG9yc1tjb2xvck5hbWVdLmJhc2U7CiAgICB9CiAgfSBlbHNlIGlmIChjb2xvck5hbWUgJiYgY29sb3JOYW1lIGluIGN1cnJlbnRUaGVtZSkgewogICAgaGV4Q29sb3IgPSBjdXJyZW50VGhlbWVbY29sb3JOYW1lXTsKICB9CgogIHJldHVybiBoZXhDb2xvcjsKfQoKZnVuY3Rpb24gaW50VG9IZXgoY29sb3IpIHsKICB2YXIgaGV4Q29sb3IgPSBjb2xvci50b1N0cmluZygxNik7CiAgaWYgKGhleENvbG9yLmxlbmd0aCA8IDYpIGhleENvbG9yID0gJzAnLnJlcGVhdCg2IC0gaGV4Q29sb3IubGVuZ3RoKSArIGhleENvbG9yOwogIHJldHVybiAnIycgKyBoZXhDb2xvcjsKfQoKZnVuY3Rpb24gY29sb3JUb0hleChjb2xvcikgewogIHJldHVybiBpbnRUb0hleChjb2xvclRvSW50KGNvbG9yKSk7Cn0KLyoqDQogKiBDb252ZXJ0cyBIU1ZBIHRvIFJHQkEuIEJhc2VkIG9uIGZvcm11bGEgZnJvbSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IU0xfYW5kX0hTVg0KICoNCiAqIEBwYXJhbSBjb2xvciBIU1ZBIGNvbG9yIGFzIGFuIGFycmF5IFswLTM2MCwgMC0xLCAwLTEsIDAtMV0NCiAqLwoKCmZ1bmN0aW9uIEhTVkF0b1JHQkEoaHN2YSkgewogIHZhciBoID0gaHN2YS5oLAogICAgICBzID0gaHN2YS5zLAogICAgICB2ID0gaHN2YS52LAogICAgICBhID0gaHN2YS5hOwoKICB2YXIgZiA9IGZ1bmN0aW9uIGYobikgewogICAgdmFyIGsgPSAobiArIGggLyA2MCkgJSA2OwogICAgcmV0dXJuIHYgLSB2ICogcyAqIE1hdGgubWF4KE1hdGgubWluKGssIDQgLSBrLCAxKSwgMCk7CiAgfTsKCiAgdmFyIHJnYiA9IFtmKDUpLCBmKDMpLCBmKDEpXS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgIHJldHVybiBNYXRoLnJvdW5kKHYgKiAyNTUpOwogIH0pOwogIHJldHVybiB7CiAgICByOiByZ2JbMF0sCiAgICBnOiByZ2JbMV0sCiAgICBiOiByZ2JbMl0sCiAgICBhOiBhCiAgfTsKfQovKioNCiAqIENvbnZlcnRzIFJHQkEgdG8gSFNWQS4gQmFzZWQgb24gZm9ybXVsYSBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWDQogKg0KICogQHBhcmFtIGNvbG9yIFJHQkEgY29sb3IgYXMgYW4gYXJyYXkgWzAtMjU1LCAwLTI1NSwgMC0yNTUsIDAtMV0NCiAqLwoKCmZ1bmN0aW9uIFJHQkF0b0hTVkEocmdiYSkgewogIGlmICghcmdiYSkgcmV0dXJuIHsKICAgIGg6IDAsCiAgICBzOiAxLAogICAgdjogMSwKICAgIGE6IDEKICB9OwogIHZhciByID0gcmdiYS5yIC8gMjU1OwogIHZhciBnID0gcmdiYS5nIC8gMjU1OwogIHZhciBiID0gcmdiYS5iIC8gMjU1OwogIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKTsKICB2YXIgbWluID0gTWF0aC5taW4ociwgZywgYik7CiAgdmFyIGggPSAwOwoKICBpZiAobWF4ICE9PSBtaW4pIHsKICAgIGlmIChtYXggPT09IHIpIHsKICAgICAgaCA9IDYwICogKDAgKyAoZyAtIGIpIC8gKG1heCAtIG1pbikpOwogICAgfSBlbHNlIGlmIChtYXggPT09IGcpIHsKICAgICAgaCA9IDYwICogKDIgKyAoYiAtIHIpIC8gKG1heCAtIG1pbikpOwogICAgfSBlbHNlIGlmIChtYXggPT09IGIpIHsKICAgICAgaCA9IDYwICogKDQgKyAociAtIGcpIC8gKG1heCAtIG1pbikpOwogICAgfQogIH0KCiAgaWYgKGggPCAwKSBoID0gaCArIDM2MDsKICB2YXIgcyA9IG1heCA9PT0gMCA/IDAgOiAobWF4IC0gbWluKSAvIG1heDsKICB2YXIgaHN2ID0gW2gsIHMsIG1heF07CiAgcmV0dXJuIHsKICAgIGg6IGhzdlswXSwKICAgIHM6IGhzdlsxXSwKICAgIHY6IGhzdlsyXSwKICAgIGE6IHJnYmEuYQogIH07Cn0KCmZ1bmN0aW9uIEhTVkF0b0hTTEEoaHN2YSkgewogIHZhciBoID0gaHN2YS5oLAogICAgICBzID0gaHN2YS5zLAogICAgICB2ID0gaHN2YS52LAogICAgICBhID0gaHN2YS5hOwogIHZhciBsID0gdiAtIHYgKiBzIC8gMjsKICB2YXIgc3ByaW1lID0gbCA9PT0gMSB8fCBsID09PSAwID8gMCA6ICh2IC0gbCkgLyBNYXRoLm1pbihsLCAxIC0gbCk7CiAgcmV0dXJuIHsKICAgIGg6IGgsCiAgICBzOiBzcHJpbWUsCiAgICBsOiBsLAogICAgYTogYQogIH07Cn0KCmZ1bmN0aW9uIEhTTEF0b0hTVkEoaHNsKSB7CiAgdmFyIGggPSBoc2wuaCwKICAgICAgcyA9IGhzbC5zLAogICAgICBsID0gaHNsLmwsCiAgICAgIGEgPSBoc2wuYTsKICB2YXIgdiA9IGwgKyBzICogTWF0aC5taW4obCwgMSAtIGwpOwogIHZhciBzcHJpbWUgPSB2ID09PSAwID8gMCA6IDIgLSAyICogbCAvIHY7CiAgcmV0dXJuIHsKICAgIGg6IGgsCiAgICBzOiBzcHJpbWUsCiAgICB2OiB2LAogICAgYTogYQogIH07Cn0KCmZ1bmN0aW9uIFJHQkF0b0NTUyhyZ2JhKSB7CiAgcmV0dXJuICJyZ2JhKCIuY29uY2F0KHJnYmEuciwgIiwgIikuY29uY2F0KHJnYmEuZywgIiwgIikuY29uY2F0KHJnYmEuYiwgIiwgIikuY29uY2F0KHJnYmEuYSwgIikiKTsKfQoKZnVuY3Rpb24gUkdCdG9DU1MocmdiYSkgewogIHJldHVybiBSR0JBdG9DU1MoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByZ2JhKSwge30sIHsKICAgIGE6IDEKICB9KSk7Cn0KCmZ1bmN0aW9uIFJHQkF0b0hleChyZ2JhKSB7CiAgdmFyIHRvSGV4ID0gZnVuY3Rpb24gdG9IZXgodikgewogICAgdmFyIGggPSBNYXRoLnJvdW5kKHYpLnRvU3RyaW5nKDE2KTsKICAgIHJldHVybiAoJzAwJy5zdWJzdHIoMCwgMiAtIGgubGVuZ3RoKSArIGgpLnRvVXBwZXJDYXNlKCk7CiAgfTsKCiAgcmV0dXJuICIjIi5jb25jYXQoW3RvSGV4KHJnYmEuciksIHRvSGV4KHJnYmEuZyksIHRvSGV4KHJnYmEuYiksIHRvSGV4KE1hdGgucm91bmQocmdiYS5hICogMjU1KSldLmpvaW4oJycpKTsKfQoKZnVuY3Rpb24gSGV4VG9SR0JBKGhleCkgewogIHZhciByZ2JhID0gKDAsIF9oZWxwZXJzLmNodW5rKShoZXguc2xpY2UoMSksIDIpLm1hcChmdW5jdGlvbiAoYykgewogICAgcmV0dXJuIHBhcnNlSW50KGMsIDE2KTsKICB9KTsKICByZXR1cm4gewogICAgcjogcmdiYVswXSwKICAgIGc6IHJnYmFbMV0sCiAgICBiOiByZ2JhWzJdLAogICAgYTogTWF0aC5yb3VuZChyZ2JhWzNdIC8gMjU1ICogMTAwKSAvIDEwMAogIH07Cn0KCmZ1bmN0aW9uIEhleFRvSFNWQShoZXgpIHsKICB2YXIgcmdiID0gSGV4VG9SR0JBKGhleCk7CiAgcmV0dXJuIFJHQkF0b0hTVkEocmdiKTsKfQoKZnVuY3Rpb24gSFNWQXRvSGV4KGhzdmEpIHsKICByZXR1cm4gUkdCQXRvSGV4KEhTVkF0b1JHQkEoaHN2YSkpOwp9CgpmdW5jdGlvbiBwYXJzZUhleChoZXgpIHsKICBpZiAoaGV4LnN0YXJ0c1dpdGgoJyMnKSkgewogICAgaGV4ID0gaGV4LnNsaWNlKDEpOwogIH0KCiAgaGV4ID0gaGV4LnJlcGxhY2UoLyhbXjAtOWEtZl0pL2dpLCAnRicpOwoKICBpZiAoaGV4Lmxlbmd0aCA9PT0gMyB8fCBoZXgubGVuZ3RoID09PSA0KSB7CiAgICBoZXggPSBoZXguc3BsaXQoJycpLm1hcChmdW5jdGlvbiAoeCkgewogICAgICByZXR1cm4geCArIHg7CiAgICB9KS5qb2luKCcnKTsKICB9CgogIGlmIChoZXgubGVuZ3RoID09PSA2KSB7CiAgICBoZXggPSAoMCwgX2hlbHBlcnMucGFkRW5kKShoZXgsIDgsICdGJyk7CiAgfSBlbHNlIHsKICAgIGhleCA9ICgwLCBfaGVscGVycy5wYWRFbmQpKCgwLCBfaGVscGVycy5wYWRFbmQpKGhleCwgNiksIDgsICdGJyk7CiAgfQoKICByZXR1cm4gIiMiLmNvbmNhdChoZXgpLnRvVXBwZXJDYXNlKCkuc3Vic3RyKDAsIDkpOwp9CgpmdW5jdGlvbiBwYXJzZUdyYWRpZW50KGdyYWRpZW50LCBjb2xvcnMsIGN1cnJlbnRUaGVtZSkgewogIHJldHVybiBncmFkaWVudC5yZXBsYWNlKC8oW2Etel0rKFxzW2Etel0rLVsxLTVdKT8pKD89JHwsKS9naSwgZnVuY3Rpb24gKHgpIHsKICAgIHJldHVybiBjbGFzc1RvSGV4KHgsIGNvbG9ycywgY3VycmVudFRoZW1lKSB8fCB4OwogIH0pLnJlcGxhY2UoLyhyZ2JhXCgpI1swLTlhLWZdKyg/PSwpL2dpLCBmdW5jdGlvbiAoeCkgewogICAgcmV0dXJuICdyZ2JhKCcgKyBPYmplY3QudmFsdWVzKEhleFRvUkdCQShwYXJzZUhleCh4LnJlcGxhY2UoL3JnYmFcKC8sICcnKSkpKS5zbGljZSgwLCAzKS5qb2luKCcsJyk7CiAgfSk7Cn0KCmZ1bmN0aW9uIFJHQnRvSW50KHJnYmEpIHsKICByZXR1cm4gKHJnYmEuciA8PCAxNikgKyAocmdiYS5nIDw8IDgpICsgcmdiYS5iOwp9Ci8qKg0KICogUmV0dXJucyB0aGUgY29udHJhc3QgcmF0aW8gKDEtMjEpIGJldHdlZW4gdHdvIGNvbG9ycy4NCiAqDQogKiBAcGFyYW0gYzEgRmlyc3QgY29sb3INCiAqIEBwYXJhbSBjMiBTZWNvbmQgY29sb3INCiAqLwoKCmZ1bmN0aW9uIGNvbnRyYXN0UmF0aW8oYzEsIGMyKSB7CiAgdmFyIF90b1hZWiA9ICgwLCBfdHJhbnNmb3JtU1JHQi50b1hZWikoUkdCdG9JbnQoYzEpKSwKICAgICAgX3RvWFlaMiA9IF9zbGljZWRUb0FycmF5KF90b1hZWiwgMiksCiAgICAgIHkxID0gX3RvWFlaMlsxXTsKCiAgdmFyIF90b1hZWjMgPSAoMCwgX3RyYW5zZm9ybVNSR0IudG9YWVopKFJHQnRvSW50KGMyKSksCiAgICAgIF90b1hZWjQgPSBfc2xpY2VkVG9BcnJheShfdG9YWVozLCAyKSwKICAgICAgeTIgPSBfdG9YWVo0WzFdOwoKICByZXR1cm4gKE1hdGgubWF4KHkxLCB5MikgKyAwLjA1KSAvIChNYXRoLm1pbih5MSwgeTIpICsgMC4wNSk7Cn0="},{"version":3,"mappings":"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","names":["isCssColor","colorToInt","classToHex","intToHex","colorToHex","HSVAtoRGBA","RGBAtoHSVA","HSVAtoHSLA","HSLAtoHSVA","RGBAtoCSS","RGBtoCSS","RGBAtoHex","HexToRGBA","HexToHSVA","HSVAtoHex","parseHex","parseGradient","RGBtoInt","contrastRatio","color","match","rgb","c","substring","length","split","map","char","join","parseInt","TypeError","constructor","name","isNaN","colors","currentTheme","toString","trim","replace","colorName","colorModifier","hexColor","base","repeat","hsva","h","s","v","a","f","k","n","Math","max","min","round","r","g","b","rgba","hsv","l","sprime","hsl","toHex","substr","toUpperCase","hex","slice","startsWith","x","gradient","Object","values","c1","c2","y1","y2"],"sourceRoot":"","sources":["../../src/util/colorUtils.ts"],"sourcesContent":["// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport { toXYZ } from './color/transformSRGB'\n\n// Types\nimport { VuetifyThemeVariant } from 'types/services/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | false): boolean {\n  return !!color && !!color.match(/^(#|var\\(--|(rgb|hsl)a?\\()/)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color[0] === '#' ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n *\n * @param c1 First color\n * @param c2 Second color\n */\nexport function contrastRatio (c1: RGBA, c2: RGBA): number {\n  const [, y1] = toXYZ(RGBtoInt(c1))\n  const [, y2] = toXYZ(RGBtoInt(c2))\n\n  return (Math.max(y1, y2) + 0.05) / (Math.min(y1, y2) + 0.05)\n}\n"]}]}