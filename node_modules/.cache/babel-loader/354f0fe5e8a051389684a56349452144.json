{"remainingRequest":"C:\\Test\\Library\\node_modules\\babel-loader\\lib\\index.js!C:\\Test\\Library\\node_modules\\vuetify\\lib\\util\\color\\transformSRGB.js","dependencies":[{"path":"C:\\Test\\Library\\node_modules\\vuetify\\lib\\util\\color\\transformSRGB.js","mtime":1663166508843},{"path":"C:\\Test\\Library\\babel.config.js","mtime":1663166470352},{"path":"C:\\Test\\Library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663166481294},{"path":"C:\\Test\\Library\\node_modules\\babel-loader\\lib\\index.js","mtime":1663166479765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmZyb21YWVogPSBmcm9tWFlaOwpleHBvcnRzLnRvWFlaID0gdG9YWVo7Cgp2YXIgX2hlbHBlcnMgPSByZXF1aXJlKCIuLi8uLi91dGlsL2hlbHBlcnMiKTsKCi8vIEZvciBjb252ZXJ0aW5nIFhZWiB0byBzUkdCCnZhciBzcmdiRm9yd2FyZE1hdHJpeCA9IFtbMy4yNDA2LCAtMS41MzcyLCAtMC40OTg2XSwgWy0wLjk2ODksIDEuODc1OCwgMC4wNDE1XSwgWzAuMDU1NywgLTAuMjA0MCwgMS4wNTcwXV07IC8vIEZvcndhcmQgZ2FtbWEgYWRqdXN0Cgp2YXIgc3JnYkZvcndhcmRUcmFuc2Zvcm0gPSBmdW5jdGlvbiBzcmdiRm9yd2FyZFRyYW5zZm9ybShDKSB7CiAgcmV0dXJuIEMgPD0gMC4wMDMxMzA4ID8gQyAqIDEyLjkyIDogMS4wNTUgKiBNYXRoLnBvdyhDLCAxIC8gMi40KSAtIDAuMDU1Owp9OyAvLyBGb3IgY29udmVydGluZyBzUkdCIHRvIFhZWgoKCnZhciBzcmdiUmV2ZXJzZU1hdHJpeCA9IFtbMC40MTI0LCAwLjM1NzYsIDAuMTgwNV0sIFswLjIxMjYsIDAuNzE1MiwgMC4wNzIyXSwgWzAuMDE5MywgMC4xMTkyLCAwLjk1MDVdXTsgLy8gUmV2ZXJzZSBnYW1tYSBhZGp1c3QKCnZhciBzcmdiUmV2ZXJzZVRyYW5zZm9ybSA9IGZ1bmN0aW9uIHNyZ2JSZXZlcnNlVHJhbnNmb3JtKEMpIHsKICByZXR1cm4gQyA8PSAwLjA0MDQ1ID8gQyAvIDEyLjkyIDogTWF0aC5wb3coKEMgKyAwLjA1NSkgLyAxLjA1NSwgMi40KTsKfTsKCmZ1bmN0aW9uIGZyb21YWVooeHl6KSB7CiAgdmFyIHJnYiA9IEFycmF5KDMpOwogIHZhciB0cmFuc2Zvcm0gPSBzcmdiRm9yd2FyZFRyYW5zZm9ybTsKICB2YXIgbWF0cml4ID0gc3JnYkZvcndhcmRNYXRyaXg7IC8vIE1hdHJpeCB0cmFuc2Zvcm0sIHRoZW4gZ2FtbWEgYWRqdXN0bWVudAoKICBmb3IgKHZhciBpID0gMDsgaSA8IDM7ICsraSkgewogICAgcmdiW2ldID0gTWF0aC5yb3VuZCgoMCwgX2hlbHBlcnMuY2xhbXApKHRyYW5zZm9ybShtYXRyaXhbaV1bMF0gKiB4eXpbMF0gKyBtYXRyaXhbaV1bMV0gKiB4eXpbMV0gKyBtYXRyaXhbaV1bMl0gKiB4eXpbMl0pKSAqIDI1NSk7CiAgfSAvLyBSZXNjYWxlIGJhY2sgdG8gWzAsIDI1NV0KCgogIHJldHVybiAocmdiWzBdIDw8IDE2KSArIChyZ2JbMV0gPDwgOCkgKyAocmdiWzJdIDw8IDApOwp9CgpmdW5jdGlvbiB0b1hZWihyZ2IpIHsKICB2YXIgeHl6ID0gWzAsIDAsIDBdOwogIHZhciB0cmFuc2Zvcm0gPSBzcmdiUmV2ZXJzZVRyYW5zZm9ybTsKICB2YXIgbWF0cml4ID0gc3JnYlJldmVyc2VNYXRyaXg7IC8vIFJlc2NhbGUgZnJvbSBbMCwgMjU1XSB0byBbMCwgMV0gdGhlbiBhZGp1c3Qgc1JHQiBnYW1tYSB0byBsaW5lYXIgUkdCCgogIHZhciByID0gdHJhbnNmb3JtKChyZ2IgPj4gMTYgJiAweGZmKSAvIDI1NSk7CiAgdmFyIGcgPSB0cmFuc2Zvcm0oKHJnYiA+PiA4ICYgMHhmZikgLyAyNTUpOwogIHZhciBiID0gdHJhbnNmb3JtKChyZ2IgPj4gMCAmIDB4ZmYpIC8gMjU1KTsgLy8gTWF0cml4IGNvbG9yIHNwYWNlIHRyYW5zZm9ybQoKICBmb3IgKHZhciBpID0gMDsgaSA8IDM7ICsraSkgewogICAgeHl6W2ldID0gbWF0cml4W2ldWzBdICogciArIG1hdHJpeFtpXVsxXSAqIGcgKyBtYXRyaXhbaV1bMl0gKiBiOwogIH0KCiAgcmV0dXJuIHh5ejsKfQ=="},{"version":3,"mappings":"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","names":["fromXYZ","toXYZ","srgbForwardMatrix","srgbForwardTransform","C","srgbReverseMatrix","srgbReverseTransform","xyz","rgb","Array","transform","matrix","i","Math","round","r","g","b"],"sourceRoot":"","sources":["../../../src/util/color/transformSRGB.ts"],"sourcesContent":["import { ColorInt, XYZ } from '../colorUtils'\nimport { clamp } from '../../util/helpers'\n\n// For converting XYZ to sRGB\nconst srgbForwardMatrix = [\n  [3.2406, -1.5372, -0.4986],\n  [-0.9689, 1.8758, 0.0415],\n  [0.0557, -0.2040, 1.0570],\n]\n\n// Forward gamma adjust\nconst srgbForwardTransform = (C: number): number => (\n  C <= 0.0031308\n    ? C * 12.92\n    : 1.055 * C ** (1 / 2.4) - 0.055\n)\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [\n  [0.4124, 0.3576, 0.1805],\n  [0.2126, 0.7152, 0.0722],\n  [0.0193, 0.1192, 0.9505],\n]\n\n// Reverse gamma adjust\nconst srgbReverseTransform = (C: number): number => (\n  C <= 0.04045\n    ? C / 12.92\n    : ((C + 0.055) / 1.055) ** 2.4\n)\n\nexport function fromXYZ (xyz: XYZ): ColorInt {\n  const rgb = Array(3)\n  const transform = srgbForwardTransform\n  const matrix = srgbForwardMatrix\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(\n      matrix[i][0] * xyz[0] +\n      matrix[i][1] * xyz[1] +\n      matrix[i][2] * xyz[2]\n    )) * 255)\n  }\n\n  // Rescale back to [0, 255]\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0)\n}\n\nexport function toXYZ (rgb: ColorInt): XYZ {\n  const xyz: XYZ = [0, 0, 0]\n  const transform = srgbReverseTransform\n  const matrix = srgbReverseMatrix\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  const r = transform((rgb >> 16 & 0xff) / 255)\n  const g = transform((rgb >> 8 & 0xff) / 255)\n  const b = transform((rgb >> 0 & 0xff) / 255)\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b\n  }\n\n  return xyz\n}\n"]}]}